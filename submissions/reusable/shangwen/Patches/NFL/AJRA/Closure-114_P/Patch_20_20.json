{
  "repair_end": "2019-08-12 11:44:27.058385", 
  "repair_begin": "2019-08-12 11:21:56.534750", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_114/src/com/google/javascript/jscomp/NameAnalyzer.java\t2019-08-11 23:19:54.356220056 -0400\n+++ /tmp/Arja_Defects4J_Closure_114/patches_z1u6/Patch_20/patched/com/google/javascript/jscomp/NameAnalyzer.java\t2019-08-11 23:44:26.991439477 -0400\n@@ -1596,22 +1596,6 @@\n     // Function expression.  try to get a name from the parent var\n     // declaration or assignment.\n     Node parent = function.getParent();\n-    if (parent != null) {\n-      // Account for functions defined in the form:\n-      //   var a = cond ? function a() {} : function b() {};\n-      while (parent.isHook()) {\n-        parent = parent.getParent();\n-      }\n-\n-      if (parent.isName()) {\n-        return scopes.get(parent);\n-      }\n-\n-      if (parent.isAssign()) {\n-        return scopes.get(parent);\n-      }\n-    }\n-\n     return Collections.emptyList();\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/NameAnalyzer.java", 
          "line": 1599, 
          "faulty": "if (parent != null) {\n  while (parent.isHook()) {\n    parent=parent.getParent();\n  }\n  if (parent.isName()) {\n    return scopes.get(parent);\n  }\n  if (parent.isAssign()) {\n    return scopes.get(parent);\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}