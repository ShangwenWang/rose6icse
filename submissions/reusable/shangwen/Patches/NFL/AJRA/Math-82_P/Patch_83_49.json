{
  "repair_end": "2019-07-31 18:32:54.972216", 
  "repair_begin": "2019-07-31 18:25:18.014540", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_82/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\t2019-07-31 06:24:23.950122892 -0400\n+++ /tmp/Arja_Defects4J_Math_82/patches_im6f/Patch_49/patched/org/apache/commons/math/optimization/linear/SimplexTableau.java\t2019-07-31 06:32:54.588625922 -0400\n@@ -349,7 +349,11 @@\n               coefficients[i] = 0;\n           } else {\n               basicRows.add(basicRow);\n-              coefficients[i] =\n+              for (int artificialVar = 0; artificialVar < numArtificialVariables; artificialVar++) {\n+\t\t\t\tint row = getBasicRow(getArtificialVariableOffset() + artificialVar);\n+\t\t\t\tsubtractRow(0, row, 1.0);\n+\t\t\t}\n+\t\t\tcoefficients[i] =\n                   (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -\n                   (restrictToNonNegative ? 0 : mostNegative);\n           }\n\n\n--- /tmp/Arja_Defects4J_Math_82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java\t2019-07-31 06:24:27.822129291 -0400\n+++ /tmp/Arja_Defects4J_Math_82/patches_im6f/Patch_49/patched/org/apache/commons/math/optimization/linear/SimplexSolver.java\t2019-07-31 06:32:54.600626593 -0400\n@@ -60,7 +60,6 @@\n         Integer minPos = null;\n         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {\n             if (MathUtils.compareTo(tableau.getEntry(0, i), minValue, epsilon) < 0) {\n-                minValue = tableau.getEntry(0, i);\n                 minPos = i;\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java", 
          "line": 352, 
          "faulty": "coefficients[i]=(basicRow == null ? 0 : getEntry(basicRow,getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative);", 
          "type": "InsertBefore", 
          "seed": "for (int artificialVar=0; artificialVar < numArtificialVariables; artificialVar++) {\n  int row=getBasicRow(getArtificialVariableOffset() + artificialVar);\n  subtractRow(0,row,1.0);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java", 
          "line": 63, 
          "faulty": "minValue=tableau.getEntry(0,i);", 
          "type": "Delete", 
          "seed": "this.constraints=constraints;"
        }
      ]
    }
  ]
}