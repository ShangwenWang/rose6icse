{
  "repair_end": "2019-07-25 16:18:03.354034", 
  "repair_begin": "2019-07-25 15:27:34.748292", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\t2019-07-25 03:26:20.766331389 -0400\n+++ /tmp/Arja_Defects4J_Math_2/patches_2d8v/Patch_15/patched/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java\t2019-07-25 04:18:02.819682996 -0400\n@@ -134,9 +134,6 @@\n             }\n             k = 1.0 / k;\n             tmp = mu + k * sigma;\n-            if (tmp < upper) {\n-                upper = ((int) Math.ceil(tmp)) - 1;\n-            }\n         }\n \n         return solveInverseCumulativeProbability(p, lower, upper);\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java", 
          "line": 137, 
          "faulty": "if (tmp < upper) {\n  upper=((int)Math.ceil(tmp)) - 1;\n}", 
          "type": "Delete", 
          "seed": "if (chebyshevApplies) {\n  double k=FastMath.sqrt((1.0 - p) / p);\n  double tmp=mu - k * sigma;\n  if (tmp > lower) {\n    lower=((int)Math.ceil(tmp)) - 1;\n  }\n  k=1.0 / k;\n  tmp=mu + k * sigma;\n  if (tmp < upper) {\n    upper=((int)Math.ceil(tmp)) - 1;\n  }\n}"
        }
      ]
    }
  ]
}