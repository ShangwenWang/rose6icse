{
  "repair_end": "2019-08-12 08:46:57.299540", 
  "repair_begin": "2019-08-12 08:17:54.198673", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2019-08-11 20:16:31.320250775 -0400\n+++ /tmp/Arja_Defects4J_Closure_46/patches_euvt/Patch_1110/patched/com/google/javascript/rhino/jstype/PrototypeObjectType.java\t2019-08-11 20:46:57.186951511 -0400\n@@ -380,10 +380,6 @@\n         sb.append(getPropertyType(property).toString());\n \n         ++i;\n-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n-          sb.append(\", ...\");\n-          break;\n-        }\n       }\n \n       sb.append(\"}\");\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2019-08-11 20:16:31.320250775 -0400\n+++ /tmp/Arja_Defects4J_Closure_46/patches_euvt/Patch_1110/patched/com/google/javascript/rhino/jstype/RecordTypeBuilder.java\t2019-08-11 20:46:57.194951499 -0400\n@@ -83,7 +83,6 @@\n   public JSType build() {\n      // If we have an empty record, simply return the object type.\n     if (isEmpty) {\n-       return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);\n     }\n \n     return registry.createRecordType(Collections.unmodifiableMap(properties));\n\n\n--- /tmp/Arja_Defects4J_Closure_46/src/com/google/javascript/rhino/jstype/RecordType.java\t2019-08-11 20:16:33.344207874 -0400\n+++ /tmp/Arja_Defects4J_Closure_46/patches_euvt/Patch_1110/patched/com/google/javascript/rhino/jstype/RecordType.java\t2019-08-11 20:46:57.202951487 -0400\n@@ -107,7 +107,7 @@\n     Set<String> keySet = properties.keySet();\n     Map<String, JSType> otherProps = otherRecord.properties;\n     if (!otherProps.keySet().equals(keySet)) {\n-      return false;\n+      return true;\n     }\n     for (String key : keySet) {\n       if (!otherProps.get(key).isEquivalentTo(properties.get(key))) {\n@@ -172,13 +172,6 @@\n             getPropertyNode(property));\n       }\n \n-      for (String property : thatRecord.properties.keySet()) {\n-        if (!hasProperty(property)) {\n-          builder.addProperty(property, thatRecord.getPropertyType(property),\n-              thatRecord.getPropertyNode(property));\n-        }\n-      }\n-\n       return builder.build();\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 176, 
          "faulty": "if (!hasProperty(property)) {\n  builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java", 
          "line": 86, 
          "faulty": "return registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE);", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 175, 
          "faulty": "for (String property : thatRecord.properties.keySet()) {\n  if (!hasProperty(property)) {\n    builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));\n  }\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 110, 
          "faulty": "return false;", 
          "type": "Replace", 
          "seed": "return true;"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/RecordType.java", 
          "line": 177, 
          "faulty": "builder.addProperty(property,thatRecord.getPropertyType(property),thatRecord.getPropertyNode(property));", 
          "type": "Delete", 
          "seed": "NULL"
        }, 
        {
          "path": "src/com/google/javascript/rhino/jstype/PrototypeObjectType.java", 
          "line": 383, 
          "faulty": "if (i == MAX_PRETTY_PRINTED_PROPERTIES) {\n  sb.append(\", ...\");\n  break;\n}", 
          "type": "Delete", 
          "seed": "NULL"
        }
      ]
    }
  ]
}