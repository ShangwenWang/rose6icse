{
  "repair_end": "2019-08-01 03:53:45.215512", 
  "repair_begin": "2019-08-01 03:45:49.780270", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\t2019-07-31 15:45:19.658537419 -0400\n+++ /tmp/Arja_Defects4J_Math_95/patches_9bcp/Patch_153/patched/org/apache/commons/math/distribution/FDistributionImpl.java\t2019-07-31 15:53:44.841617251 -0400\n@@ -97,7 +97,8 @@\n      */\n     public double inverseCumulativeProbability(final double p) \n         throws MathException {\n-        if (p == 0) {\n+        setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);\n+\t\tif (p == 0) {\n             return 0d;\n         }\n         if (p == 1) {\n@@ -145,7 +146,7 @@\n         double d = getDenominatorDegreesOfFreedom();\n             // use mean\n             ret = d / (d - 2.0);\n-        return ret;\n+        return 0;\n     }\n     \n     /**\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 100, 
          "faulty": "if (p == 0) {\n  return 0d;\n}", 
          "type": "InsertBefore", 
          "seed": "setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 148, 
          "faulty": "return ret;", 
          "type": "Replace", 
          "seed": "return 0;"
        }
      ]
    }
  ]
}