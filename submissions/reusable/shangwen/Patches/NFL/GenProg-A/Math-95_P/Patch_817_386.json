{
  "repair_end": "2019-08-02 06:41:22.137628", 
  "repair_begin": "2019-08-02 06:27:52.704791", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\t2019-08-01 18:27:13.538747654 -0400\n+++ /tmp/GenProg_Defects4J_Math_95/patches_eusf/Patch_386/patched/org/apache/commons/math/distribution/FDistributionImpl.java\t2019-08-01 18:41:21.707657011 -0400\n@@ -72,7 +72,10 @@\n         if (x <= 0.0) {\n             ret = 0.0;\n         } else {\n-            double n = getNumeratorDegreesOfFreedom();\n+            setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);\n+\t\t\tsetDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);\n+\t\t\tsetDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);\n+\t\t\tdouble n = getNumeratorDegreesOfFreedom();\n             double m = getDenominatorDegreesOfFreedom();\n             \n             ret = Beta.regularizedBeta((n * x) / (m + n * x),\n@@ -145,7 +148,7 @@\n         double d = getDenominatorDegreesOfFreedom();\n             // use mean\n             ret = d / (d - 2.0);\n-        return ret;\n+        return p;\n     }\n     \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java\t2019-08-01 18:27:09.918709629 -0400\n+++ /tmp/GenProg_Defects4J_Math_95/patches_eusf/Patch_386/patched/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java\t2019-08-01 18:41:21.727657221 -0400\n@@ -176,9 +176,8 @@\n             (\"bad value for maximumIterations: \" + maximumIterations);\n         }\n         if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n-            throw new IllegalArgumentException\n-            (\"Invalid endpoint parameters:  lowerBound=\" + lowerBound + \n-              \" initial=\" + initial + \" upperBound=\" + upperBound);\n+            int i = 0;\n+\t\t\tthrow new IllegalArgumentException(\"Function is not polynomial.\");\n         }\n         double a = initial;\n         double b = initial;\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 75, 
          "faulty": "double n=getNumeratorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 75, 
          "faulty": "double n=getNumeratorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 75, 
          "faulty": "double n=getNumeratorDegreesOfFreedom();", 
          "type": "InsertBefore", 
          "seed": "setDenominatorDegreesOfFreedom(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java", 
          "line": 179, 
          "faulty": "throw new IllegalArgumentException(\"Invalid endpoint parameters:  lowerBound=\" + lowerBound + \" initial=\"+ initial+ \" upperBound=\"+ upperBound);", 
          "type": "Replace", 
          "seed": "throw new IllegalArgumentException(\"Function is not polynomial.\");"
        }, 
        {
          "path": "src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java", 
          "line": 179, 
          "faulty": "throw new IllegalArgumentException(\"Invalid endpoint parameters:  lowerBound=\" + lowerBound + \" initial=\"+ initial+ \" upperBound=\"+ upperBound);", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 148, 
          "faulty": "return ret;", 
          "type": "Replace", 
          "seed": "return p;"
        }
      ]
    }
  ]
}