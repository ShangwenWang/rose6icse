{
  "repair_end": "2019-07-24 06:57:06.700864", 
  "repair_begin": "2019-07-24 06:48:59.737321", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java\t2019-07-23 18:48:16.829384384 -0400\n+++ /tmp/GenProg_Defects4J_Chart_13/patches_8l5v/Patch_29/patched/org/jfree/chart/block/BorderArrangement.java\t2019-07-23 18:57:06.195906292 -0400\n@@ -295,7 +295,8 @@\n         if (this.leftBlock != null) {\n             Size2D size = this.leftBlock.arrange(g2, c2);\n             w[2] = size.width;\n-            h[2] = size.height;\n+            this.topBlock = null;\n+\t\t\th[2] = size.height;\n         }\n         if (this.rightBlock != null) {\n             double maxW = Math.max(width - w[2], 0.0);\n@@ -433,14 +434,9 @@\n             h[0] = size.height;\n         }\n         w[1] = w[0];\n-        if (this.bottomBlock != null) {\n-            RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,\n-                    constraint.getHeight() - h[0]), LengthConstraintType.RANGE);\n-            Size2D size = this.bottomBlock.arrange(g2, c2);\n-            h[1] = size.height;\n-        }\n-        h[2] = constraint.getHeight() - h[1] - h[0];\n+        Size2D s1 = arrangeNN(container, g2);\n+        this.rightBlock = null;\n+\t\th[2] = constraint.getHeight() - h[1] - h[0];\n         if (this.leftBlock != null) {\n             RectangleConstraint c3 = new RectangleConstraint(0.0,\n                     new Range(0.0, constraint.getWidth()),\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 443, 
          "faulty": "h[2]=constraint.getHeight() - h[1] - h[0];", 
          "type": "InsertBefore", 
          "seed": "this.rightBlock=null;"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 436, 
          "faulty": "if (this.bottomBlock != null) {\n  RectangleConstraint c2=new RectangleConstraint(w[0],null,LengthConstraintType.FIXED,0.0,new Range(0.0,constraint.getHeight() - h[0]),LengthConstraintType.RANGE);\n  Size2D size=this.bottomBlock.arrange(g2,c2);\n  h[1]=size.height;\n}", 
          "type": "Replace", 
          "seed": "Size2D s1=arrangeNN(container,g2);"
        }, 
        {
          "path": "source/org/jfree/chart/block/BorderArrangement.java", 
          "line": 298, 
          "faulty": "h[2]=size.height;", 
          "type": "InsertBefore", 
          "seed": "this.topBlock=null;"
        }
      ]
    }
  ]
}