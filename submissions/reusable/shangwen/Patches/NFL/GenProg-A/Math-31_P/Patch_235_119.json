{
  "repair_end": "2019-08-01 00:18:52.905991", 
  "repair_begin": "2019-07-31 22:49:44.611982", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/distribution/FDistribution.java\t2019-07-31 10:48:31.566974128 -0400\n+++ /tmp/GenProg_Defects4J_Math_31/patches_xnp9/Patch_119/patched/org/apache/commons/math3/distribution/FDistribution.java\t2019-07-31 12:18:52.469100139 -0400\n@@ -212,7 +212,8 @@\n      */\n     public double getNumericalVariance() {\n         if (!numericalVarianceIsCalculated) {\n-            numericalVariance = calculateNumericalVariance();\n+            final double logm = FastMath.log(denominatorDegreesOfFreedom);\n+\t\t\tnumericalVariance = calculateNumericalVariance();\n             numericalVarianceIsCalculated = true;\n         }\n         return numericalVariance;\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java\t2019-07-31 10:48:35.794966426 -0400\n+++ /tmp/GenProg_Defects4J_Math_31/patches_xnp9/Patch_119/patched/org/apache/commons/math3/util/ContinuedFraction.java\t2019-07-31 12:18:52.481100118 -0400\n@@ -174,8 +174,7 @@\n                                                x);\n             }\n             if (Double.isNaN(hN)) {\n-                throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n-                                               x);\n+                return -0.0;\n             }\n \n             if (FastMath.abs(deltaN - 1.0) < epsilon) {\n\n\n--- /tmp/GenProg_Defects4J_Math_31/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2019-07-31 10:48:31.210974776 -0400\n+++ /tmp/GenProg_Defects4J_Math_31/patches_xnp9/Patch_119/patched/org/apache/commons/math3/exception/MathIllegalStateException.java\t2019-07-31 12:18:52.489100102 -0400\n@@ -83,6 +83,6 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        return context.getMessage();\n     }\n }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/distribution/FDistribution.java", 
          "line": 215, 
          "faulty": "numericalVariance=calculateNumericalVariance();", 
          "type": "InsertBefore", 
          "seed": "final double logm=FastMath.log(denominatorDegreesOfFreedom);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/ContinuedFraction.java", 
          "line": 177, 
          "faulty": "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,x);", 
          "type": "Replace", 
          "seed": "return -0.0;"
        }
      ]
    }
  ]
}