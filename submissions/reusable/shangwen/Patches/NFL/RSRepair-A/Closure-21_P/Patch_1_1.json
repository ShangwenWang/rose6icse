{
  "repair_end": "2019-08-12 21:46:56.177910", 
  "repair_begin": "2019-08-12 21:26:07.260127", 
  "patches": [
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_21/src/com/google/javascript/jscomp/CheckSideEffects.java\t2019-08-12 09:24:44.821515365 -0400\n+++ /tmp/RSRepair_Defects4J_Closure_21/patches_voof/Patch_1/patched/com/google/javascript/jscomp/CheckSideEffects.java\t2019-08-12 09:46:56.146036324 -0400\n@@ -115,12 +115,7 @@\n         return;\n       }\n       if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA) continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;\n-          else break;\n-        }\n+        int index = -1;\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 118, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Replace", 
          "seed": "int index=-1;"
        }
      ]
    }
  ]
}