{
  "repair_end": "2019-08-02 21:00:49.732451", 
  "repair_begin": "2019-08-02 20:52:17.444752", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java", 
          "line": 1136, 
          "faulty": "for (int i=0; i < j; i+=4) {\n  for (int k=0; k < 4; k+=step) {\n    final double tmp=work[i + k];\n    work[i + k]=work[j - k];\n    work[j - k]=tmp;\n  }\n  j-=4;\n}", 
          "type": "Replace", 
          "seed": "int mBlockIndex=0;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Math_80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java\t2019-08-02 23:51:16.192878213 -0400\n+++ /tmp/RSRepair_Defects4J_Math_80/patches_p656/Patch_7/patched/org/apache/commons/math/linear/EigenDecompositionImpl.java\t2019-08-03 00:00:49.290945988 -0400\n@@ -1133,14 +1133,7 @@\n         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {\n             // flip array\n             int j = 4 * n - 1;\n-            for (int i = 0; i < j; i += 4) {\n-                for (int k = 0; k < 4; k += step) {\n-                    final double tmp = work[i + k];\n-                    work[i + k] = work[j - k];\n-                    work[j - k] = tmp;\n-                }\n-                j -= 4;\n-            }\n+            int mBlockIndex = 0;\n             return true;\n         }\n         return false;\n\n\n"
    }
  ]
}