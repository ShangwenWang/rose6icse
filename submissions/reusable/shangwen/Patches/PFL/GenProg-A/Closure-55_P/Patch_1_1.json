{
  "repair_end": "2019-08-12 03:34:15.611957", 
  "repair_begin": "2019-08-12 03:11:46.073595", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java\t2019-08-11 15:10:13.561322801 -0400\n+++ /tmp/GenProg_Defects4J_Closure_55/patches_jmrq/Patch_1/patched/com/google/javascript/jscomp/FunctionRewriter.java\t2019-08-11 15:34:15.513268537 -0400\n@@ -63,11 +63,6 @@\n \n     Multimap<Reducer, Reduction> reductionMap = HashMultimap.create();\n \n-    // Accumulate possible reductions in the reduction multi map.  They\n-    // will be applied in the loop below.\n-    NodeTraversal.traverse(compiler, root,\n-                           new ReductionGatherer(reducers, reductionMap));\n-\n     // Apply reductions iff they will provide some savings.\n     for (Reducer reducer : reducers) {\n       Collection<Reduction> reductions = reductionMap.get(reducer);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/FunctionRewriter.java", 
          "line": 68, 
          "faulty": "NodeTraversal.traverse(compiler,root,new ReductionGatherer(reducers,reductionMap));", 
          "type": "Delete", 
          "seed": "Node parameterName=Node.newString(Token.NAME,\"jscomp_throw_param\");"
        }
      ]
    }
  ]
}