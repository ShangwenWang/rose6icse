{
  "repair_end": "2019-07-30 05:17:40.849729", 
  "repair_begin": "2019-07-30 04:43:41.094307", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\t2019-07-29 16:42:56.656911522 -0400\n+++ /tmp/Arja_Defects4J_Math_50/patches_jy1t/Patch_6/patched/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java\t2019-07-29 17:17:40.359255523 -0400\n@@ -183,11 +183,7 @@\n                     f0 *= f1 / (f1 + fx);\n                     break;\n                 case REGULA_FALSI:\n-                    // Nothing.\n-                    if (x == x1) {\n-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));\n-                        f0 = computeObjectiveValue(x0);\n-                    }\n+                    ;\n                     break;\n                 default:\n                     // Should never happen.\n\n\n--- /tmp/Arja_Defects4J_Math_50/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2019-07-29 16:42:52.956964181 -0400\n+++ /tmp/Arja_Defects4J_Math_50/patches_jy1t/Patch_6/patched/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2019-07-29 17:17:40.391255068 -0400\n@@ -368,9 +368,6 @@\n     public static void verifyBracketing(UnivariateRealFunction function,\n                                         final double lower,\n                                         final double upper) {\n-        if (function == null) {\n-            throw new NullArgumentException(LocalizedFormats.FUNCTION);\n-        }\n         verifyInterval(lower, upper);\n         if (!isBracketing(function, lower, upper)) {\n             throw new NoBracketingException(lower, upper,\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 371, 
          "faulty": "if (function == null) {\n  throw new NullArgumentException(LocalizedFormats.FUNCTION);\n}", 
          "type": "Delete", 
          "seed": "if (lower >= upper) {\n  throw new NumberIsTooLargeException(LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,lower,upper,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java", 
          "line": 187, 
          "faulty": "if (x == x1) {\n  x0=0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1),atol));\n  f0=computeObjectiveValue(x0);\n}", 
          "type": "Delete", 
          "seed": "this.allowed=AllowedSolution.ANY_SIDE;"
        }
      ]
    }
  ]
}