{
  "repair_end": "2019-08-12 00:08:51.481293", 
  "repair_begin": "2019-08-11 23:55:31.173921", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Closure_1/src/com/google/javascript/rhino/Node.java\t2019-08-11 11:54:23.043997768 -0400\n+++ /tmp/Arja_Defects4J_Closure_1/patches_a0it/Patch_51/patched/com/google/javascript/rhino/Node.java\t2019-08-11 12:08:51.390623499 -0400\n@@ -1408,11 +1408,7 @@\n   public String checkTreeEquals(Node node2) {\n       NodeMismatch diff = checkTreeEqualsImpl(node2);\n       if (diff != null) {\n-        return \"Node tree inequality:\" +\n-            \"\\nTree1:\\n\" + toStringTree() +\n-            \"\\n\\nTree2:\\n\" + node2.toStringTree() +\n-            \"\\n\\nSubtree1: \" + diff.nodeA.toStringTree() +\n-            \"\\n\\nSubtree2: \" + diff.nodeB.toStringTree();\n+        return toString(true, true, true);\n       }\n       return null;\n   }\n\n\n--- /tmp/Arja_Defects4J_Closure_1/src/com/google/javascript/jscomp/RemoveUnusedVars.java\t2019-08-11 11:54:25.391997717 -0400\n+++ /tmp/Arja_Defects4J_Closure_1/patches_a0it/Patch_51/patched/com/google/javascript/jscomp/RemoveUnusedVars.java\t2019-08-11 12:08:51.406623561 -0400\n@@ -393,12 +393,7 @@\n       Node lastArg;\n       while ((lastArg = argList.getLastChild()) != null) {\n         Var var = fnScope.getVar(lastArg.getString());\n-        if (!referenced.contains(var)) {\n-          argList.removeChild(lastArg);\n-          compiler.reportCodeChange();\n-        } else {\n-          break;\n-        }\n+        break;\n       }\n     } else {\n       callSiteOptimizer.optimize(fnScope, referenced);\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/rhino/Node.java", 
          "line": 1411, 
          "faulty": "return \"Node tree inequality:\" + \"\\nTree1:\\n\" + toStringTree() + \"\\n\\nTree2:\\n\"+ node2.toStringTree()+ \"\\n\\nSubtree1: \"+ diff.nodeA.toStringTree()+ \"\\n\\nSubtree2: \"+ diff.nodeB.toStringTree();", 
          "type": "Replace", 
          "seed": "return toString(true,true,true);"
        }, 
        {
          "path": "src/com/google/javascript/jscomp/RemoveUnusedVars.java", 
          "line": 396, 
          "faulty": "if (!referenced.contains(var)) {\n  argList.removeChild(lastArg);\n  compiler.reportCodeChange();\n}\n else {\n  break;\n}", 
          "type": "Replace", 
          "seed": "break;"
        }
      ]
    }
  ]
}