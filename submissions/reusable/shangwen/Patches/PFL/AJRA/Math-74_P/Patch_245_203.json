{
  "repair_end": "2019-07-31 11:16:43.806364", 
  "repair_begin": "2019-07-31 10:57:41.036832", 
  "patches": [
    {
      "diff": "--- /tmp/Arja_Defects4J_Math_74/src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java\t2019-07-30 22:56:53.066031411 -0400\n+++ /tmp/Arja_Defects4J_Math_74/patches_w3ps/Patch_203/patched/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java\t2019-07-30 23:16:43.352584466 -0400\n@@ -250,7 +250,8 @@\n \n                 stepSize = hNew;\n \n-                // predict a first estimate of the state at step end (P in the PECE sequence)\n+                lastStep = manager.stop();\n+\t\t\t\t// predict a first estimate of the state at step end (P in the PECE sequence)\n                 final double stepEnd = stepStart + stepSize;\n                 interpolator.setInterpolatedTime(stepEnd);\n                 System.arraycopy(interpolator.getInterpolatedState(), 0, yTmp, 0, y0.length);\n@@ -283,7 +284,8 @@\n \n                     // discrete events handling\n                     interpolatorTmp.reinitialize(stepEnd, stepSize, correctedScaled, nordsieckTmp);\n-                    interpolatorTmp.storeTime(stepStart);\n+                    setMaxGrowth(10.0);\n+\t\t\t\t\tinterpolatorTmp.storeTime(stepStart);\n                     interpolatorTmp.shift();\n                     interpolatorTmp.storeTime(stepEnd);\n                     if (manager.evaluateStep(interpolatorTmp)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java", 
          "line": 286, 
          "faulty": "interpolatorTmp.storeTime(stepStart);", 
          "type": "InsertBefore", 
          "seed": "setMaxGrowth(10.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java", 
          "line": 254, 
          "faulty": "final double stepEnd=stepStart + stepSize;", 
          "type": "InsertBefore", 
          "seed": "lastStep=manager.stop();"
        }
      ]
    }
  ]
}