{
  "repair_end": "2019-08-12 23:54:36.499742", 
  "repair_begin": "2019-08-12 23:33:47.043420", 
  "patches": [
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_55/src/com/google/javascript/jscomp/FunctionRewriter.java\t2019-08-12 11:32:28.825170457 -0400\n+++ /tmp/RSRepair_Defects4J_Closure_55/patches_83p1/Patch_6/patched/com/google/javascript/jscomp/FunctionRewriter.java\t2019-08-12 11:54:36.455406473 -0400\n@@ -87,18 +87,6 @@\n       for (Reduction reduction : reductions) {\n         savings += reduction.estimateSavings();\n       }\n-\n-      // Compare estimated savings against the helper cost.  Apply\n-      // reductions if doing so will result in some savings.\n-      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {\n-        for (Reduction reduction : reductions) {\n-          reduction.apply();\n-        }\n-\n-        Node addingRoot = compiler.getNodeForCodeInsertion(null);\n-        addingRoot.addChildrenToFront(helperCode);\n-        compiler.reportCodeChange();\n-      }\n     }\n   }\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/FunctionRewriter.java", 
          "line": 93, 
          "faulty": "if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {\n  for (  Reduction reduction : reductions) {\n    reduction.apply();\n  }\n  Node addingRoot=compiler.getNodeForCodeInsertion(null);\n  addingRoot.addChildrenToFront(helperCode);\n  compiler.reportCodeChange();\n}", 
          "type": "Delete", 
          "seed": "formatPreamble();"
        }
      ]
    }
  ]
}