{
  "repair_end": "2019-08-12 22:08:41.742633", 
  "repair_begin": "2019-08-12 21:48:19.662464", 
  "patches": [
    {
      "diff": "--- /tmp/RSRepair_Defects4J_Closure_22/src/com/google/javascript/jscomp/CheckSideEffects.java\t2019-08-12 09:46:59.317993059 -0400\n+++ /tmp/RSRepair_Defects4J_Closure_22/patches_geao/Patch_7/patched/com/google/javascript/jscomp/CheckSideEffects.java\t2019-08-12 10:08:41.680445130 -0400\n@@ -109,15 +109,6 @@\n     // This no-op statement was there so that JSDoc information could\n     // be attached to the name. This check should not complain about it.\n       if (n == parent.getLastChild()) {\n-        for (Node an : parent.getAncestors()) {\n-          int ancestorType = an.getType();\n-          if (ancestorType == Token.COMMA)\n-            continue;\n-          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)\n-            return;\n-          else\n-            break;\n-        }\n       }\n     } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {\n       if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||\n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CheckSideEffects.java", 
          "line": 112, 
          "faulty": "for (Node an : parent.getAncestors()) {\n  int ancestorType=an.getType();\n  if (ancestorType == Token.COMMA)   continue;\n  if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)   return;\n else   break;\n}", 
          "type": "Delete", 
          "seed": "formatPreamble();"
        }
      ]
    }
  ]
}